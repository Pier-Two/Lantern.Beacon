name: .NET

on:
  push:
    branches-ignore: 
      - 'docs/**'
  pull_request:
    branches-ignore: 
      - 'docs/**'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['src/Lantern.Beacon/Lantern.Beacon.csproj', 'src/Lantern.Beacon.SyncProtocol/Lantern.Beacon.SyncProtocol.csproj']
    steps:
      - name: Checkout branch 
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Build and Test Project
        run: |
          dotnet build ${{ matrix.project }}
          dotnet test ${{ matrix.project }} --verbosity normal --collect:"XPlat Code Coverage"
      
  sonar:
    name: Analyze with SonarCloud
    runs-on: windows-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud scanner
        uses: actions/cache@v3
        with:
          path: .sonar\scanner
          key: ${{ runner.os }}-sonar-scanner-${{ hashFiles('**/*.cs') }}
          restore-keys: ${{ runner.os }}-sonar-scanner-
        
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner
      
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"Pier-Two_Lantern.Beacon" /o:"pier-two" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          dotnet build
          dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
