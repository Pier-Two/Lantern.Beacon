using System.Buffers;
using System.Text;
using Lantern.Beacon.Networking.Encoding;
using Lantern.Beacon.Storage;
using Lantern.Beacon.Sync.Types;
using Lantern.Beacon.Sync.Types.Ssz.Altair;
using Lantern.Beacon.Sync.Types.Ssz.Deneb;
using Lantern.Beacon.Sync.Types.Ssz.Phase0;
using Microsoft.Extensions.Logging;
using Nethermind.Libp2p.Core;
using NUnit.Framework;
using SszSharp;

namespace Lantern.Beacon.Tests;

[TestFixture]
public class CoreTests
{
    [Test]
    public void Test()
    {
        Span<byte> data = Convert.FromHexString("132F6D756C746973747265616D2F312E302E300A432F657468322F626561636F6E5F636861696E2F7265712F6C696768745F636C69656E745F6F7074696D69737469635F7570646174652F312F73737A5F736E617070790A");
        var offset = 0;
        var header = Decode(data, ref offset);
        var flag = header & 0x07;
        var id = header >> 3;
        var payload = data.Slice(offset);
        
        Console.WriteLine($"Flag: {flag}, ID: {id}, Data: {Convert.ToHexString(payload.ToArray())}");
    }

    [Test]
    public void DbStoreTest()
    {
        var options = new BeaconClientOptions();
        var loggerFactory = new LoggerFactory();
        var db = new LiteDbService(options, loggerFactory);
        var oldUpdate = DenebLightClientFinalityUpdate.CreateDefault();

        db.Init();
        db.StoreOrUpdate(nameof(DenebLightClientFinalityUpdate), oldUpdate);
    }

    [Test]
    public void DbReadTest()
    {
        var options = new BeaconClientOptions();
        var loggerFactory = new LoggerFactory();
        var db = new LiteDbService(options, loggerFactory);

        db.Init();
        
        var store = db.Fetch<ForkType>(nameof(ForkType));
        
        if(store != null)
            Console.WriteLine(store);
    }

    [Test]
    public void DbUpdateTest()
    { 
        var options = new BeaconClientOptions();
        var loggerFactory = new LoggerFactory();
        var db = new LiteDbService(options, loggerFactory);
        var newUpdate = DenebLightClientFinalityUpdate.Deserialize(Convert.FromHexString(
            "70010000acd3df3b000000000017000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffizePreset.MainnetPreset);
        
        db.Init();
        db.StoreOrUpdate(nameof(DenebLightClientFinalityUpdate), newUpdate);
    }
    
    
    public static ulong Decode(Span<byte> line, ref int offset)
    {
        ulong res = 0;
        for (int i = 0; i < 9; i++)
        {
            if ((line[offset + i] & 128) == 0)
            {
                for (int j = offset + i; j >= offset; j--)
                {
                    res <<= 7;
                    res |= (ulong)line[j] & 127;
                }

                offset += i + 1;
                return res;
            }
        }

        return 0;
    }
}